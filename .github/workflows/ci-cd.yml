name: CI-CD
on:
  push:
    branches: [master]
  workflow_dispatch:

env:
  # .yarnrc.yml needs this
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: install node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: install and build
        run: npm run build

      - name: unit test
        run: npm run test
  cd:
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: install node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: analyze
        id: analyze
        uses: rotorsoft/semrel-analyze@v2
        with:
          package: "@rotorsoft/esml"
          directory: "@rotorsoft/esml"

      - name: analysis
        run: |
          echo "last-tag: ${{ steps.analyze.outputs.last-tag }}"
          echo "next-tag: ${{ steps.analyze.outputs.next-tag }}"
          echo "next-version: ${{ steps.analyze.outputs.next-version }}"
          echo "${{ steps.analyze.outputs.change-log }}"

      - name: release
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          npm-registry: "registry.npmjs.org"
          npm-token: "${{ secrets.NPM_TOKEN }}"
          user: "rotorsoft"
          email: "rotorsoft@outlook.com"
          tag: "${{ steps.analyze.outputs.next-tag }}"
          version: "${{ steps.analyze.outputs.next-version }}"
          change-log: "${{ steps.analyze.outputs.change-log }}"

        run: |
          if [[ "${tag}" != "@rotorsoft/esml-v${version}" ]]; then
            echo "⏏ Invalid semrel tag: ${tag} ⏏";
            exit 0;
          fi

          echo ">>> pulling..."
          git config user.name "${user}"
          git config user.email "${email}"
          git remote set-url origin "${GITHUB_URL}.git"
          git pull origin "${GITHUB_REF}"

          echo ">>> building..."
          yarn build

          echo ">>> changelog..."
          msg="chore(release): ${TAG}"
          notes=$(echo "${change-log}" | awk '{gsub(/\\n/,"\n")}1')
          echo "${notes}"$'\n'"$(cat ./CHANGELOG.md)" > ./CHANGELOG.md

          echo ">>> bumping..."
          npm --no-git-tag-version version "${version}"

          echo ">>> committing..."
          git add -A .
          HUSKY=0 git commit -am "${msg}"

          echo ">>> pushing..."
          git tag -a ${tag} HEAD -m "${msg}"
          HUSKY=0 git push --follow-tags origin "${GITHUB_REF}"

          echo ">>> releasing..."
          data=$(jq -n \
            --arg tag "${tag}" \
            --arg notes "${notes}" \
            '{name: $tag, tag_name: $tag, body: $notes}')
          curl -u ${user}:${GITHUB_TOKEN} -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${GITHUB_REPO}/releases -d "${data}"

          if [[ ! -z "${npm-registry}" ]]; then
            echo ">>> publishing..."
            echo "//${npm-registry}/:_authToken=${npm-token}" >> .npmrc
            npm config set registry "https://${npm-registry}"
            yarn npm publish --access public
          fi

          echo "🚀 ${TAG} released succesfully! 🚀"

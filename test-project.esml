## WolfDesk Ticket Service

# Actors 
actor Customer invokes 
	OpenTicket, AddMessage, RequestTicketEscalation
    reads Tickets
actor AgentActor invokes 
	AddMessage, CloseTicket
    reads Tickets
    

# Ticket is the main aggregate
aggregate Ticket
handles 
	OpenTicket, AssignTicket, AddMessage,
	CloseTicket, RequestTicketEscalation,
    EscalateTicket, ReassignTicket,
    MarkMessageDelivered, AcknowledgeMessage
emits
	TicketOpened, TicketAssigned, MessageAdded,
    TicketClosed, TicketEscalated, TicketReassigned,
    MessageDelivered, MessageRead, TicketEscalationRequested,
    TicketResolved

# Policies to handle new ticket assignment and escalation
policy Assignment handles TicketOpened 
invokes AssignTicket, ReassignTicket
reads Tickets, Agents

policy RequestEscalation handles TicketEscalationRequested
invokes EscalateTicket, CloseTicket
reads Tickets, Agents

# Automatically close tickets after resolution
policy Closing handles TicketResolved invokes CloseTicket
reads Tickets

# A projection of current ticket states is used to drive policies
projector Tickets
handles 
	TicketOpened, TicketAssigned, MessageAdded,
    TicketClosed, TicketEscalated, TicketReassigned,
    MessageDelivered, MessageRead, TicketEscalationRequested,
    TicketResolved

# Let's put all of the above in the same context
context TicketLifecycle includes
	Ticket, Tickets, Assignment, 
	RequestEscalation, Closing,
	Customer, AgentActor

# We will need a messaging subdomain
context MessagingSystem includes Messaging
process Messaging
	invokes MarkMessageDelivered, AcknowledgeMessage
    handles MessageAdded
	reads Tickets

# Billing context
system Billing
handles BillTenant emits TenantBilled

policy BillingPolicy handles TicketResolved
invokes BillTenant, AddTenant reads Tickets, Tenants

context BillingSystem includes Billing, BillingPolicy

# Admin context
aggregate Tenant handles AddTenant emits TenantAdded
aggregate Agent handles AddAgent emits AgentAdded
aggregate Product handles AddProduct emits ProductAdded

context Admin includes
	Tenant, Agent, Product

schema Ticket requires name, active:boolean, user:uuid, body:Body optional close:date, open:date
schema Body requires id:number optional description
schema OpenTicket requires title optional user:uuid
schema TicketOpened requires title, user:uuid